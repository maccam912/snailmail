# Default values for snailmail.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: harbor.rackspace.koski.co/library/snailmail
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 2567
  targetPort: 2567

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: '{{ include "snailmail.fullname" . }}'
    # cert-manager annotations for TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: snailmail.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    []
    # Automatically configure TLS for all hosts
    # - secretName: snailmail-tls
    #   hosts:
    #     - snailmail.example.com

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  NODE_ENV: production
  # OpenTelemetry tracing configuration
  TRACING_ENABLED: "false"
  TRACE_EXPORTER: "otlp"
  OTLP_ENDPOINT: "http://opentelemetry-collector:4318/v1/traces"
  # OTLP_HEADERS: '{"Authorization":"Bearer your-token"}'
  # JAEGER_ENDPOINT: "http://jaeger-collector:14268/api/traces"

# Probes configuration
probes:
  liveness:
    httpGet:
      path: /hello_world
      port: 2567
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    httpGet:
      path: /hello_world
      port: 2567
    initialDelaySeconds: 5
    periodSeconds: 5
